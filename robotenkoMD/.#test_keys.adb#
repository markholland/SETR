with Digital_IO_Sim, Robot_Interface, Robot_Monitor;
use  Digital_IO_Sim, Robot_Interface, Robot_Monitor;

procedure Test_Keys is
   Ch : Character;
   Available : Boolean;
   Command : Command_Type := Stop_All;
   Pos : Position;
   Max_Pos : Position := (400, 400, 400, 40);
   type Pos_Array is array (Integer range <>) of Position;
begin
   Robot_Mon.Reset;
   Put_Line ("Press robot control keys to make it move(q,a,w,s,e,d,r,f), or press 'u' to terminate");
    loop
      Pos := Robot_Mon.Get_Pos;
      Get_Immediate (Ch, Available);
      if Available then
         case Ch is
            -- Memorized keys
            when 'M' | 'm' =>

            -- Rotation keys
            when 'Q' | 'q' =>
               Command(Rotation) := (if Command(Rotation) = Stop then To_Init else Stop);
            when 'A' | 'a' =>
               Command(Rotation) := (if Command(Rotation) = Stop then To_End else Stop);
            -- Forward keys
            when 'W' | 'w' =>
               Command(Forward) := (if Command(Forward) = Stop then To_Init else Stop);
            when 'S' | 's' =>
               Command(Forward) := (if Command(Forward) = Stop then To_End else Stop);
            --  Height keys
            when 'E' | 'e' =>
               Command(Height) := (if Command(Height) = Stop then To_Init else Stop);
            when 'D' | 'd' =>
               Command(Height) := (if Command(Height) = Stop then To_End else Stop);
            -- Clamp keys
            when 'R' | 'r' =>
               Command(Clamp) := (if Command(Clamp) = Stop then To_Init else Stop);
            when 'F' | 'f' =>
               Command(Clamp) := (if Command(Clamp) = Stop then To_End else Stop);
            -- Termination key
            when 'U' | 'u' =>
               exit;
            -- Any other key
            when others =>
               null;
         end case;
      end if;
      -- Check limits before applying Command
      for Ax in Axis_Type'Range loop
         if (Pos(Ax) = 0 and Command(Ax) = To_Init) or else
           (Pos(Ax) = Max_Pos(Ax) and Command(Ax) = To_End) then
            Command(Ax) := Stop;  -- Overwrite forcing commands with Stop
         end if;
      end loop;
      Move_Robot (Command);
      delay 0.02; -- Don't need a precise keyboard samplig timing in this example
   end loop;
   New_Line;
   Put_Line ("End of program");
end Test_Keys;
